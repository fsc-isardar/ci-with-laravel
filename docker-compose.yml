version: '3'

services:

  # runs Apache, PHP, webapp(s) on this machine
  dev_webserver:

    # Want to debug this container?
    #   After 'docker-compose build' and 'docker-compose up'
    #   run: 'docker-compose exec dev_webserver bash' and investigate...
    #entrypoint: ["sh", "-c", "sleep 2073600"]

    build:
      # path to Dockerfile from this file
      context: .
      # name of Dockerfile
      dockerfile: ./dockerfiles/webserver.Dockerfile

    ports:
      # map host's port 80 (left) to container's port 80 (right)
      # ...container port and host port are expected to be open...
      - "81:80"
      # same as above: maps external port <-> internal port
      - "444:443"
  
    depends_on:
      # does not start this service until database service starts
      - dev_database

    # map each named volume to a specified folder/file in container
    volumes:
      #- ./:/var/www/html # copy from here to there... <-- this makes no sense, why would you want to save the laravel project as a volume???
      - /docker/volumes/php:/usr/local/etc/php/php.ini # map host server dir to container file...
      - /docker/volumes/apache2_logs:/var/log/apache2 # map host server dir to container dir...

  # runs MySQL on this machine
  dev_database:

    # Want to debug this container?
    #   After 'docker-compose build' and 'docker-compose up'
    #   run: 'docker-compose exec dev_database bash' and investigate...
    #entrypoint: ["sh", "-c", "sleep 2073600"]

    build:
      context: .
      dockerfile: ./dockerfiles/database.Dockerfile
    
    ports:
      - "3307:3306"

    # env variables for this container
    environment:
      MYSQL_DATABASE: my_default_db
      MYSQL_ROOT_PASSWORD: secret

    command:
      --init-file /data/application/init.sql
    
    # always auto-restart regardless of how the container exited (except some cases)
    restart: always

    volumes:
      - /docker/volumes/mysql:/var/lib/mysql
      - /docker/volumes/mysql_logs:/var/log/mysql
      - ./server/init.sql:/data/application/init.sql

  # runs PhpMyAdmin on this machine
  dev_admin:

    # Want to debug this container?
    #   After 'docker-compose build' and 'docker-compose up'
    #   run: 'docker-compose exec dev_admin bash' and investigate...
    #entrypoint: ["sh", "-c", "sleep 2073600"]

    build:
      context: .
      dockerfile: ./dockerfiles/admin.Dockerfile

    ports:
      - "8000:80"

    restart: always

    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: dev_database
    
    depends_on:
      - dev_database